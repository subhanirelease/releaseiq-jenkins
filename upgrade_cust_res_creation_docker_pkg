   pipeline {
  environment {
    EMAIL_TO = ' subhani.s@releaseiq.io'
    AUTOMATION_DIR='deployment/docker_compose'
    USER_NAME="tsubhanishaik86@gmail.com"
    App="app.txt"
	GIT_AUTH = credentials('github')
	PKG="pkg"
	workflowexecutor_build_no='ga'
	orchestrator_build_no='ga'
	resilience_build_no='ga'
	listener_build_no='ga'
	pubsub_build_no='ga'
	insights_build_no='ga'
	MASTER_NAMESPACE="$ENV_NAME"
  }
    agent {
    kubernetes {
      //Cloud Kubernetes
      yaml """
      kind: Pod
      metadata:
        name: kaniko
      spec:
        containers:
        - name: awscli
          image: amazon/aws-cli
          imagePullPolicy: IfNotPresent
          command:
          -  cat
          tty: true
        - name: curl
          image: docker.io/gempesaw/curl-jq:latest
          imagePullPolicy: IfNotPresent
          command:
          -  cat
          tty: true
        - name: kaniko
          image: gcr.io/kaniko-project/executor:debug-539ddefcae3fd6b411a95982a830d987f4214251
          imagePullPolicy: IfNotPresent
          command:
          - cat
          tty: true
          volumeMounts:
            - name: docker-config
              mountPath: /kaniko/.docker
        volumes:
          - name: docker-config
            configMap:
              name: docker-config
      """
    }
  }
    stages{

      stage('CREATE_FILES') {
          steps {
	        container(name: 'awscli'){
            withAWS(region:'us-west-2',credentials:'aws') {
			checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/svc_listener.git']]])	
			sh '''
			mkdir demo1
			aws s3 cp s3://riq-staging/customer_onboarding/$FRIENDLY_NAME/resource.txt  $WORKSPACE/demo1/
			chmod -R 777 demo1/resource.txt
         	chown -R 1000:1000 demo1
            ls -l $WORKSPACE/demo1/
			echo FRIENDLY_NAME="$FRIENDLY_NAME" > $WORKSPACE/var.properties
			'''
			}
		}
          sh '''
			. $WORKSPACE/demo1/resource.txt
			cd $AUTOMATION_DIR
			sed -i "s|TENANT_ID|${TENANT_UUID}|" template.yaml
		   	sed -i "s|ENTERPRISE_KEY|${ENTERPRISE_KEY}|" template.yaml
			
			if [ "$MASTER_NAMESPACE" = "stage01" ]
			then
			echo "Update admin_backend: baseurl value with $MASTER_NAMESPACE"
			ADMIN_BE_URL='https://stage01.api.releaseiq.io/admin-be'
			sed -i "s|ADMIN_BE_URL|${ADMIN_BE_URL}|" template.yaml
			fi
			
			if [ "$MASTER_NAMESPACE" = "rhea" ]
			then
			echo "Update admin_backend: baseurl value with $MASTER_NAMESPACE"
			ADMIN_BE_URL='https://rhea.api.releaseiq.io/admin-be'
			sed -i "s|ADMIN_BE_URL|${ADMIN_BE_URL}|" template.yaml
			fi
			
			
		   	
			sed -i "s|ABC|${USER_ACCESSKEY}|" template.yaml
			sed -i "s|XYZ|${USER_SECRETKEY}|" template.yaml
			cat template.yaml
			cp template.yaml $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			echo "_____________________________________"
			echo "template push to github repo"
			git config --local credential.helper "!f() { echo username=\\$GIT_AUTH_USR; echo password=\\$GIT_AUTH_PSW; }; f"
			git config --global user.email "prabhu.k@releaseiq.io"
			git config --global user.name "Prabhu Kasisekar"
			git add $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			git commit -m "Push file from master branch"
			git push --force origin HEAD:master
			sleep 10;
		  '''
		  
		  container(name: 'awscli'){
         withAWS(region:'us-west-2',credentials:'aws') {
		  checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'WipeWorkspace']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/riq-ci-insights.git']]])
		  sh '''
			aws s3 cp s3://riq-staging/customer_onboarding/$FRIENDLY_NAME/resource.txt  $WORKSPACE/demo1/
			chmod -R 777 demo1/resource.txt
         	chown -R 1000:1000 demo1
            ls -l $WORKSPACE/demo1/
			. $WORKSPACE/demo1/resource.txt
			cd $AUTOMATION_DIR
			sed -i "s|TENANT_ID|${TENANT_UUID}|" template.yaml
			sed -i "s|BUCKET_NAME|${S3_BUCKET_NAME}|" template.yaml
		   	sed -i "s|ENTERPRISE_KEY|${ENTERPRISE_KEY}|" template.yaml
		   	sed -i "s|FRIENDLY_NAME|${FRIENDLY_NAME}|" template.yaml
			if [ "$MASTER_NAMESPACE" = "stage01" ]
			then
			echo "Update admin_backend: baseurl value with $MASTER_NAMESPACE"
			ADMIN_BE_URL='https://stage01.api.releaseiq.io/admin-be'
			sed -i "s|ADMIN_BE_URL|${ADMIN_BE_URL}|" template.yaml
			fi
			
			if [ "$MASTER_NAMESPACE" = "rhea" ]
			then
			echo "Update admin_backend: baseurl value with $MASTER_NAMESPACE"
			ADMIN_BE_URL='https://rhea.api.releaseiq.io/admin-be'
			sed -i "s|ADMIN_BE_URL|${ADMIN_BE_URL}|" template.yaml
			fi
			
			sed -i "s|ABC|${USER_ACCESSKEY}|" template.yaml
			sed -i "s|XYZ|${USER_SECRETKEY}|" template.yaml
			cat template.yaml
			cp template.yaml $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			'''
			}
			}
			sh '''
			. $WORKSPACE/demo1/resource.txt
			echo "_____________________________________"
			echo "template push to github repo"
			git config --local credential.helper "!f() { echo username=\\$GIT_AUTH_USR; echo password=\\$GIT_AUTH_PSW; }; f"
			git config --global user.email "prabhu.k@releaseiq.io"
			git config --global user.name "Prabhu Kasisekar"
			git add $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			git commit -m "Push file from master branch"
			git push --force origin HEAD:master
			  
		  '''
		  
		  
		 container(name: 'awscli'){
         withAWS(region:'us-west-2',credentials:'aws') {
		  checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'WipeWorkspace']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/svc_workflowexecutor.git']]])
		  sh '''
			aws s3 cp s3://riq-staging/customer_onboarding/$FRIENDLY_NAME/resource.txt  $WORKSPACE/demo1/
			chmod -R 777 demo1/resource.txt
         	chown -R 1000:1000 demo1
            ls -l $WORKSPACE/demo1/
			. $WORKSPACE/demo1/resource.txt
			cd $AUTOMATION_DIR
			sed -i "s|TENANT_ID|${TENANT_UUID}|" template.yaml
		   	sed -i "s|ENTERPRISE_KEY|${ENTERPRISE_KEY}|" template.yaml
		   	sed -i "s|BUCKET_NAME|${S3_BUCKET_NAME}|" template.yaml
			sed -i "s|ABC|${USER_ACCESSKEY}|" template.yaml
			sed -i "s|XYZ|${USER_SECRETKEY}|" template.yaml
			cat template.yaml
			cp template.yaml $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			'''
			}
			}
			sh '''
			. $WORKSPACE/demo1/resource.txt
			echo "_____________________________________"
			echo "template push to github repo"
			git config --local credential.helper "!f() { echo username=\\$GIT_AUTH_USR; echo password=\\$GIT_AUTH_PSW; }; f"
			git config --global user.email "prabhu.k@releaseiq.io"
			git config --global user.name "Prabhu Kasisekar"
			git add $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			git commit -m "Push file from master branch"
			git push --force origin HEAD:master
			  
		  '''
		  
		  checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'WipeWorkspace']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/svc_riqpubsub.git']]])
		  container(name: 'awscli'){
			withAWS(region:'us-west-2',credentials:'aws') {
		  sh '''
			aws s3 cp s3://riq-staging/customer_onboarding/$FRIENDLY_NAME/resource.txt  $WORKSPACE/demo1/
			chmod -R 777 demo1/resource.txt
         	chown -R 1000:1000 demo1
            ls -l $WORKSPACE/demo1/
			. $WORKSPACE/demo1/resource.txt
			cd $AUTOMATION_DIR
		    sed -i "s|FRIENDLY_NAME|${FRIENDLY_NAME}|" template.yaml
			sed -i "s|TENANT_ID|${TENANT_UUID}|" template.yaml
		   	sed -i "s|ENTERPRISE_KEY|${ENTERPRISE_KEY}|" template.yaml
			if [ "$MASTER_NAMESPACE" = "stage01" ]
			then
			echo "Update admin_backend: baseurl value with $MASTER_NAMESPACE"
			ADMIN_BE_URL='https://stage01.api.releaseiq.io/admin-be'
			sed -i "s|ADMIN_BE_URL|${ADMIN_BE_URL}|" template.yaml
			fi
			
			if [ "$MASTER_NAMESPACE" = "rhea" ]
			then
			echo "Update admin_backend: baseurl value with $MASTER_NAMESPACE"
			ADMIN_BE_URL='https://rhea.api.releaseiq.io/admin-be'
			sed -i "s|ADMIN_BE_URL|${ADMIN_BE_URL}|" template.yaml
			fi
		   	sed -i "s|BUCKET_NAME|${S3_BUCKET_NAME}|" template.yaml
			sed -i "s|ABC|${USER_ACCESSKEY}|" template.yaml
			sed -i "s|XYZ|${USER_SECRETKEY}|" template.yaml
			cat template.yaml
			cp template.yaml $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			'''
			}
			}
			sh '''
			. $WORKSPACE/demo1/resource.txt
			echo "_____________________________________"
			echo "template push to github repo"
			git config --local credential.helper "!f() { echo username=\\$GIT_AUTH_USR; echo password=\\$GIT_AUTH_PSW; }; f"
			git config --global user.email "prabhu.k@releaseiq.io"
			git config --global user.name "Prabhu Kasisekar"
			git add $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			git commit -m "Push file from master branch"
			git push --force origin HEAD:master
			  
		  '''
		  
		  checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'WipeWorkspace']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/svc_orchestrator.git']]])
		  container(name: 'awscli'){
			withAWS(region:'us-west-2',credentials:'aws') {
		  sh '''
			aws s3 cp s3://riq-staging/customer_onboarding/$FRIENDLY_NAME/resource.txt  $WORKSPACE/demo1/
			chmod -R 777 demo1/resource.txt
         	chown -R 1000:1000 demo1
            ls -l $WORKSPACE/demo1/
			. $WORKSPACE/demo1/resource.txt
			cd $AUTOMATION_DIR
			sed -i "s|TENANT_ID|${TENANT_UUID}|" template.yaml
			sed -i "s|ABC|${USER_ACCESSKEY}|" template.yaml
			sed -i "s|XYZ|${USER_SECRETKEY}|" template.yaml
			cat template.yaml
			cp template.yaml $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			'''
			}
			}
			sh '''
			. $WORKSPACE/demo1/resource.txt
			echo "_____________________________________"
			echo "template push to github repo"
			git config --local credential.helper "!f() { echo username=\\$GIT_AUTH_USR; echo password=\\$GIT_AUTH_PSW; }; f"
			git config --global user.email "prabhu.k@releaseiq.io"
			git config --global user.name "Prabhu Kasisekar"
			git add $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			git commit -m "Push file from master branch"
			git push --force origin HEAD:master
			  
		  '''
		  
		  
		checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'WipeWorkspace']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/svc_orchestrator_resilience.git']]])
		 container(name: 'awscli'){
         withAWS(region:'us-west-2',credentials:'aws') {
		sh  '''
			aws s3 cp s3://riq-staging/customer_onboarding/$FRIENDLY_NAME/resource.txt  $WORKSPACE/demo1/
			chmod -R 777 demo1/resource.txt
         	chown -R 1000:1000 demo1
            ls -l $WORKSPACE/demo1/
			. $WORKSPACE/demo1/resource.txt
			cd $AUTOMATION_DIR
			sed -i "s|TENANT_ID|${TENANT_UUID}|" template.yaml
			sed -i "s|ENTERPRISE_KEY|${ENTERPRISE_KEY}|" template.yaml
			sed -i "s|BUCKET_NAME|${S3_BUCKET_NAME}|" template.yaml
			if [ "$MASTER_NAMESPACE" = "stage01" ]
			then
			echo "Update admin_backend: baseurl value with $MASTER_NAMESPACE"
			ADMIN_BE_URL='https://stage01.api.releaseiq.io/admin-be'
			sed -i "s|ADMIN_BE_URL|${ADMIN_BE_URL}|" template.yaml
			fi
			
			if [ "$MASTER_NAMESPACE" = "rhea" ]
			then
			echo "Update admin_backend: baseurl value with $MASTER_NAMESPACE"
			ADMIN_BE_URL='https://rhea.api.releaseiq.io/admin-be'
			sed -i "s|ADMIN_BE_URL|${ADMIN_BE_URL}|" template.yaml
			fi
			
			
			if [ "$MASTER_NAMESPACE" = "stage01" ]
			then
			echo "Update admin_backend: baseurl value with $MASTER_NAMESPACE"
			VERIFIER_URL='https://stage01.api.releaseiq.io/verifier'
			sed -i "s|VERIFIER_URL|${VERIFIER_URL}|" template.yaml
			fi
			
			if [ "$MASTER_NAMESPACE" = "rhea" ]
			then
			echo "Update admin_backend: baseurl value with $MASTER_NAMESPACE"
			VERIFIER_URL='https://rhea.api.releaseiq.io/verifier'
			sed -i "s|VERIFIER_URL|${VERIFIER_URL}|" template.yaml
			fi
			
			
			sed -i "s|ABC|${USER_ACCESSKEY}|" template.yaml
			sed -i "s|XYZ|${USER_SECRETKEY}|" template.yaml
			cat template.yaml
			cp template.yaml $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			'''
			}
			}
			sh '''
			. $WORKSPACE/demo1/resource.txt
			echo "_____________________________________"
			echo "template push to github repo"
			git config --local credential.helper "!f() { echo username=\\$GIT_AUTH_USR; echo password=\\$GIT_AUTH_PSW; }; f"
			git config --global user.email "prabhu.k@releaseiq.io"
			git config --global user.name "Prabhu Kasisekar"
			git add $WORKSPACE/$AUTOMATION_DIR/${FRIENDLY_NAME}-riq-cloud.yaml
			git commit -m "Push file from master branch"
			git push --force origin HEAD:master
			
		'''
				}
		 
		}
		
		 stage('Package') {
          steps {
		  checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'WipeWorkspace']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/riq-docker-agent.git']]])	
			 container(name: 'awscli'){
            		withAWS(region:'us-west-2',credentials:'aws') {
			sh '''
			mkdir demo1
			aws s3 cp s3://riq-staging/customer_onboarding/$FRIENDLY_NAME/resource.txt  $WORKSPACE/demo1/
			chmod -R 777 demo1/resource.txt
            		chown -R 1000:1000 demo1
            		ls -l $WORKSPACE/demo1/
			'''
			}
		}
			 sh '''
			. $WORKSPACE/demo1/resource.txt
			ls -l
			sed -i "s|9dd7d8fb-3802-4ba1-8738-de5fe74ab1a6|${TENANT_UUID}|" jenkins.sh
			cd $WORKSPACE/linux
			BASE_PKG_NAME1=$(ls $WORKSPACE/linux | sort -t. -k 3,3n | tail -1)
			BASE_PKG_NAME=riq-agent.tgz
			cp $BASE_PKG_NAME1 $BASE_PKG_NAME
			
			tar -xvf $BASE_PKG_NAME
			cd docker-compose
			v=$(cat version.txt | grep version | awk '{print $2}')
			echo "current version is $v"
			echo 'VERSION="'"$v"'"' > $WORKSPACE/values.txt 
			echo '$VERSION'
			ls -l
			cat docker-compose.yml
			 
			sed -i "s|svc_workflowexecutor:.*|svc_workflowexecutor:${workflowexecutor_build_no}|" docker-compose.yml
			sed -i "s|641518622681.dkr.ecr.us-west-2.amazonaws.com/orchestrator:.*|641518622681.dkr.ecr.us-west-2.amazonaws.com/orchestrator:${orchestrator_build_no}|" docker-compose.yml
			sed -i "s|svc_orchestrator_resilience:.*|svc_orchestrator_resilience:${resilience_build_no}|" docker-compose.yml
			sed -i "s|riq-plat-listener:.*|riq-plat-listener:${listener_build_no}|" docker-compose.yml
			sed -i "s|riq-plat-pubsub:.*|riq-plat-pubsub:${pubsub_build_no}|" docker-compose.yml
			sed -i "s|svc_ci_insights:.*|svc_ci_insights:${insights_build_no}|" docker-compose.yml
			accesskey=$(echo $USER_ACCESSKEY | base64 -d)
			sed -i "s|AWS_ACCESS_KEY_ID: .*|AWS_ACCESS_KEY_ID: ${accesskey}|" docker-compose.yml
			secretkey=$(echo $USER_SECRETKEY | base64 -d)
			sed -i "s|AWS_SECRET_ACCESS_KEY: .*|AWS_SECRET_ACCESS_KEY: ${secretkey}|" docker-compose.yml
			
			
			
			cat docker-compose.yml
			
			mkdir $WORKSPACE/docker-compose1
			cp -p docker-compose.yml $WORKSPACE/docker-compose1
			rm -rf docker-compose.tar.gz
			rm -rf $WORKSPCE/docker-compose/*
			rm -rf $WORKSPCE/docker-compose/riq-agent
			rm -rf $WORKSPCE/docker-compose
			ls -la
			cd $WORKSPACE
			cp -p jenkins.sh $WORKSPACE/docker-compose1
			cp -p fluent.conf $WORKSPACE/docker-compose1
			cp -p jenkins.yaml $WORKSPACE/docker-compose1
			'''
			sh '''
			mkdir $WORKSPACE/$PKG
			mkdir $WORKSPACE/$PKG/docker-compose
			ls -la 
			cp -p $WORKSPACE/docker-compose1/docker-compose.yml $WORKSPACE/$PKG/docker-compose/
			cp -p $WORKSPACE/docker-compose1/jenkins.sh $WORKSPACE/$PKG/docker-compose/
			cp -p $WORKSPACE/docker-compose1/jenkins.yaml $WORKSPACE/$PKG/docker-compose/
			mkdir $WORKSPACE/$PKG/docker-compose/riq-agent
			mkdir $WORKSPACE/$PKG/docker-compose/riq-agent/fluentd
			mkdir $WORKSPACE/$PKG/docker-compose/riq-agent/fluentd/conf
			cp -p $WORKSPACE/docker-compose1/fluent.conf $WORKSPACE/$PKG/docker-compose/riq-agent/fluentd/conf/
			cat $WORKSPACE/$PKG/docker-compose/docker-compose.yml
			ls -la
			'''
			
			
			
			checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/svc_listener.git']]])
			sh '''
			. $WORKSPACE/values.txt
			listener_version_no="$VERSION.$listener_build_no"
			ls -la
			cd $WORKSPACE/deployment/docker_compose
			cp -p ${FRIENDLY_NAME}-riq-cloud.yaml  $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			sed -i "s|service.version=.*|service.version=${listener_version_no}|" ${FRIENDLY_NAME}-riq-cloud.yaml
			mv $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml $WORKSPACE/$PKG/docker-compose/riq-agent/listener.properties
			sed -i "s|service.version=.*|service.version=${listener_version_no}|" $WORKSPACE/$PKG/docker-compose/riq-agent/listener.properties
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/listener.properties 
			pwd
			
			'''
			
			checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/riq-ci-insights.git']]])
			sh '''
			. $WORKSPACE/values.txt
			insights_version_no="$VERSION.$insights_build_no"
			export insights_version_no="$insights_version_no"
			cd $WORKSPACE/deployment/docker_compose
			cp -p ${FRIENDLY_NAME}-riq-cloud.yaml $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			sed -i "s|service.version=.*|service.version=${insights_version_no}|" ${FRIENDLY_NAME}-riq-cloud.yaml
			mv $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml $WORKSPACE/$PKG/docker-compose/riq-agent/insights.properties
			sed -i "s|service.version=.*|service.version=${insights_version_no}|" $WORKSPACE/$PKG/docker-compose/riq-agent/insights.properties
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/insights.properties
			
			pwd
			
			'''
			
			checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/svc_workflowexecutor.git']]])
			sh '''
			. $WORKSPACE/values.txt
			wrokflow_version_no="$VERSION.$workflowexecutor_build_no"
			cd $WORKSPACE/deployment/docker_compose
			cp -p ${FRIENDLY_NAME}-riq-cloud.yaml $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			sed -i "s|service.version=.*|service.version=${wrokflow_version_no}|" ${FRIENDLY_NAME}-riq-cloud.yaml
			mv $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml $WORKSPACE/$PKG/docker-compose/riq-agent/wfexecutor.properties
			sed -i "s|service.version=.*|service.version=${wrokflow_version_no}|" $WORKSPACE/$PKG/docker-compose/riq-agent/wfexecutor.properties
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/wfexecutor.properties
			pwd
			
			'''
			
			
			
			checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/svc_riqpubsub.git']]])
			sh '''
			. $WORKSPACE/values.txt
			pubsub_version_no="$VERSION.$pubsub_build_no"
			cd $WORKSPACE/deployment/docker_compose
			cp -p ${FRIENDLY_NAME}-riq-cloud.yaml $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			sed -i "s|service.version=.*|service.version=${pubsub_version_no}|" ${FRIENDLY_NAME}-riq-cloud.yaml
			mv $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml $WORKSPACE/$PKG/docker-compose/riq-agent/pubsub.properties
			sed -i "s|service.version=.*|service.version=${pubsub_version_no}|" $WORKSPACE/$PKG/docker-compose/riq-agent/pubsub.properties
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/pubsub.properties
			pwd
			
			'''
			
			
			
			checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/svc_orchestrator_resilience.git']]])
			sh '''
			. $WORKSPACE/values.txt
			resilience_version_no="$VERSION.$resilience_build_no"
			cd $WORKSPACE/deployment/docker_compose
			cp -p ${FRIENDLY_NAME}-riq-cloud.yaml $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			sed -i "s|service.version=.*|service.version=${resilience_version_no}|" ${FRIENDLY_NAME}-riq-cloud.yaml
			mv $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml $WORKSPACE/$PKG/docker-compose/riq-agent/resilience.properties
			sed -i "s|service.version=.*|service.version=${resilience_version_no}|" $WORKSPACE/$PKG/docker-compose/riq-agent/resilience.properties
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/resilience.properties
			pwd
			
			'''
			
			
			
			checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/svc_orchestrator.git']]])
			sh '''
			. $WORKSPACE/values.txt
			orchestrator_version_no="$VERSION.$orchestrator_build_no"
			cd $WORKSPACE/deployment/docker_compose
			cp -p ${FRIENDLY_NAME}-riq-cloud.yaml $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml
			sed -i "s|service.version=.*|service.version=${orchestrator_version_no}|" ${FRIENDLY_NAME}-riq-cloud.yaml
			mv $WORKSPACE/$PKG/docker-compose/riq-agent/${FRIENDLY_NAME}-riq-cloud.yaml $WORKSPACE/$PKG/docker-compose/riq-agent/orchestrator.properties
			sed -i "s|service.version=.*|service.version=${orchestrator_version_no}|" $WORKSPACE/$PKG/docker-compose/riq-agent/orchestrator.properties
			cat $WORKSPACE/$PKG/docker-compose/riq-agent/orchestrator.properties
			pwd
			
			'''
			sh '''
			cd $WORKSPACE/$PKG/docker-compose
			. $WORKSPACE/demo1/resource.txt
			ls -la
			cd $WORKSPACE/$PKG
			tar -czvf docker-compose.tar.gz docker-compose
			ls -la $WORKSPACE
			
			'''
			container(name: 'awscli'){
            		withAWS(region:'us-west-2',credentials:'aws') {
			sh '''
			cd $WORKSPACE/$PKG
			. $WORKSPACE/demo1/resource.txt
			mv docker-compose.tar.gz riq-agent-docker.tgz
			aws s3 cp riq-agent-docker.tgz s3://${S3_BUCKET_NAME}/package/
			cd $WORKSPACE
			echo FRIENDLY_NAME="$FRIENDLY_NAME" > $WORKSPACE/var.properties
			echo "{\\"FRIENDLY_NAME\\": \\"$FRIENDLY_NAME\\"}" > artifact.json
			    ls -l artifact.json
			    cat artifact.json
			'''
			archiveArtifacts 'artifact.json'
			script {
		def props = readProperties file: 'var.properties'
		env.FRIENDLY_NAME = props.FRIENDLY_NAME

		buildName "$FRIENDLY_NAME"
		}
					}
					}
			}
		}
		 
	}
}

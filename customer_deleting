  pipeline {
  environment {
	AUTOMATION_DIR='build/automation'
    EMAIL_TO = ' subhani.s@releaseiq.io'  
 }
  agent {
    kubernetes {
      //Cloud Kubernetes
      yaml """
      kind: Pod
      metadata:
        name: kaniko
      spec:
        containers:
        - name: awscli
          image: docker.io/mikesir87/aws-cli:1.18.76
          imagePullPolicy: IfNotPresent
          command:
          -  cat
          tty: true
        - name: kaniko
          image: gcr.io/kaniko-project/executor:debug-539ddefcae3fd6b411a95982a830d987f4214251
          imagePullPolicy: IfNotPresent
          command:
          - cat
          tty: true
          volumeMounts:
            - name: docker-config
              mountPath: /kaniko/.docker
        volumes:
          - name: docker-config
            configMap:
              name: docker-config
      """
    }
  }
  stages{
		stage('checkout') {
      steps {
        checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/riq-jenkins-pipeline-jobs.git']]])
      }
      }
      	stage('update resource file') {
		steps {
		container(name: 'awscli'){
            withAWS(region:'us-west-2',credentials:'aws') {
			sh '''
			mkdir demo
			aws s3 cp s3://riq-staging/customer_onboarding/$FRIENDLY_NAME/resource.txt  $WORKSPACE/demo/
			chmod -R 777 demo/resource.txt
            chown -R 1000:1000 demo
            ls -l $WORKSPACE/demo/
			'''
			}
		}
	}
}
stage("aws") {
          steps {
              container(name: 'awscli'){
            withAWS(region:'us-west-2',credentials:'aws') {
                        script {
                            sh '''
                             . $WORKSPACE/demo/resource.txt
							  accesskey=$(echo $USER_ACCESSKEY | base64 -d)
							 echo $accesskey
							   aws iam delete-access-key --access-key-id $accesskey --user-name $FRIENDLY_NAME
                              aws iam detach-user-policy --user-name $FRIENDLY_NAME --policy-arn $POLICYARN
                              aws iam detach-user-policy --user-name $FRIENDLY_NAME --policy-arn $POLICYARN1
                              aws iam detach-user-policy --user-name $FRIENDLY_NAME --policy-arn $POLICY_ARN
                              aws iam detach-user-policy --user-name $FRIENDLY_NAME --policy-arn $POLICY_ARN1
                              aws iam delete-policy --policy-arn $POLICY_ARN
                              aws iam delete-user --user-name $FRIENDLY_NAME
                              aws s3 rb s3://www.${FRIENDLY_NAME}.releaseiq.io --force
                              aws sqs delete-queue --queue-url $HEALTH_SQS_QUEUE
                              aws sqs delete-queue --queue-url $PORTAL_SQS_QUEUE
                              aws sqs delete-queue --queue-url $MANAGE_SQS_QUEUE
                              aws sqs delete-queue --queue-url $SETTING_SQS_QUEUE
                              aws sqs delete-queue --queue-url $ACK_SQS_QUEUE
                              aws cognito-idp delete-user-pool --user-pool-id $COGNITO_POOL_ID
			                  
                            '''
                        }
            }    
              }
          }
      }
	  stage('cdn id') {
		steps {
		container(name: 'awscli'){
            withAWS(region:'us-west-2',credentials:'aws') {
		sh '''
							. $WORKSPACE/demo/resource.txt
							echo "DELETING CDN"
							echo "====================="
							cd $AUTOMATION_DIR
							ls -l
							DOMAIN_NAME="${FRIENDLY_NAME}.releaseiq.io"
							DOMAIN_NAME1="*.${FRIENDLY_NAME}.releaseiq.io"
							BUCKET_NAME="www.$FRIENDLY_NAME.releaseiq.io"
							CALLEREFERENCE="$FRIENDLY_NAME"
							sed -i "s|bucket_name|${BUCKET_NAME}|g" cdn4.json
                            sed -i "s|riq1234|${CALLEREFERENCE}|g" cdn4.json
                            sed -i "s|solta|${FRIENDLY_NAME}|g" cdn4.json
			    sed -i "s|arn:aws:acm:us-east-1:641518622681:certificate/cb779149-090d-443e-afd6-45014f85ca25|${ACM_CERTIFICATE_ARN}|g" cdn4.json
                            aws cloudfront get-distribution --id $CDN | tee automation.txt
                            cat automation.txt
                            ETAG=$( grep "ETag" automation.txt | awk '{print$2}')
                            echo "cdn Id $ETAG"
                            ETAG=$(echo  $ETAG | sed 's/"//g;s/,//g')
                            echo  'ETAG="'"$ETAG"'"' > sample.txt
                            aws cloudfront update-distribution \
                            --id  $CDN\
                            --if-match $ETAG \
                            --distribution-config file://cdn4.json
                            sleep 600;
			    aws cloudfront get-distribution --id $CDN | tee automation.txt
                            cat automation.txt
                            ETAG1=$( grep "ETag" automation.txt | awk '{print$2}')
                            echo "cdn id $ETAG1"
                            ETAG1=$(echo  $ETAG1 | sed 's/"//g;s/,//g')
                            echo  'ETAG1="'"$ETAG1"'"'
			    aws cloudfront delete-distribution --id $CDN --if-match $ETAG1
			    sleep 80;
			    aws acm delete-certificate --certificate-arn $ACM_CERTIFICATE_ARN
				sed -i "s|"_051a54f9e09ba8685f74032429600c27.www.test92.releaseiq.io."|${VALIDATION_NAME}|g" rc.json
				sed -i "s|"_4add1b26ad63e8edd60658684c02de85.zbkrxsrfvj.acm-validations.aws."|${VALIDATION_VALUE}|g" rc.json
				aws route53 change-resource-record-sets --region us-east-1 --hosted-zone-id Z0568494V6417TSHKNL7 --change-batch file://rc.json
				sed -i "s|bugbash1|${FRIENDLY_NAME}|g" rd.json
				sed -i "s|bugbash1|${FRIENDLY_NAME}|g" rd1.json
				sed -i "s|d312yuxouwkwn9.cloudfront.net|${CDN_URL}|g" rd.json
				sed -i "s|d312yuxouwkwn9.cloudfront.net|${CDN_URL}|g" rd1.json
				aws route53 change-resource-record-sets --hosted-zone-id Z0568494V6417TSHKNL7 --change-batch file://rd.json
				sleep 30;
				aws route53 change-resource-record-sets --hosted-zone-id Z0568494V6417TSHKNL7 --change-batch file://rd1.json
				
				
		'''
		            }
		        }
            }
		}
  }
 }
                             

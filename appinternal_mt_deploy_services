pipeline {
  environment {
    EMAIL_TO = 'devops-team@releaseiq.io'
    module="enterprise-management"
    podname="riq-admin-be"
    git_tag="${env.JOB_NAME}-${env.BUILD_NUMBER}"
    BUCKET='s3://riq-staging/customer_onboarding'
    RESOURCE='resource.txt'
    ADMIN_BE_BUILD='ga'
    PRODUCT_BE_BUILD='ga'
    CLOUD_SYNC_BUILD='ga'
    NOTIFICATION_BUILD='ga'
    LOGPARSER_BUILD='ga'
    ADMIN_UI_BUILD='ga'
    PRODUCT_UI_BUILD='ga'
  }
  
  agent {
    kubernetes {
      //Cloud Kubernetes
      yaml """
      kind: Pod
      metadata:
        name: helm
      spec:
        containers:
        - name: awscli
          image: amazon/aws-cli
          imagePullPolicy: IfNotPresent
          command:
          - cat
          tty: true
        volumes:
          - name: docker-config
            configMap:
              name: docker-config
      """
    }
  }
  
    stages {
        
    stage('Deploy Components') {
      steps {
          buildName "$FRIENDLY_NAME"
          container(name: 'awscli') {
              withAWS(region:'us-east-1',credentials:'aws'){
              sh '''
              aws s3 cp $BUCKET/$FRIENDLY_NAME/$RESOURCE $WORKSPACE
              . $WORKSPACE/$RESOURCE

              echo NAMESPACE=${FRIENDLY_NAME} > $WORKSPACE/var.properties
              echo ENV_NAME=$FRIENDLY_NAME >> $WORKSPACE/var.properties
              cat $WORKSPACE/var.properties
              '''
              script {
            def props = readProperties file: 'var.properties'

            env.NAMESPACE = props.NAMESPACE
            env.ENV_NAME = props.ENV_NAME
            sh '''date
            echo value of NAMESPACE is "$NAMESPACE"
            echo value of ENV_NAME is "$ENV_NAME"
            '''
			
            build job: 'appinternal_mt_log_parser_deploy', parameters: [
                [$class: 'StringParameterValue', name: 'BRANCH_NAME', value: "master"],
                [$class: 'StringParameterValue', name: 'BUILD', value: "$LOGPARSER_BUILD"],
                [$class: 'StringParameterValue', name: 'ENV_NAME', value: "$ENV_NAME"]
                ], propagate: true, wait: true
				
			sh '''
			. $WORKSPACE/$RESOURCE
			cd $WORKSPACE
			echo "{\\"FRIENDLY_NAME\\": \\"$FRIENDLY_NAME\\"}" > artifact.json
							ls -l artifact.json
							cat artifact.json
				'''
				archiveArtifacts 'artifact.json'
            }
         
        }
      }
    }
  }
}
    
}

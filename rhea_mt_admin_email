pipeline {
  environment {
    EMAIL_TO = ' subhani.s@releaseiq.io'
    AUTOMATION_DIR='build/automation'
    USER_NAME="tsubhanishaik86@gmail.com"
	App="app.txt"
    /*
    deleted input parameters
    JIRA_TICKET="rsk-100"
    BASE_PKG_NAME="solta-riq-agent"
    DATABASE_PASSWORD="12345678"
    ENTERPRISE_KEY="12345678"
    */
  }
   agent {
    kubernetes {
      //Cloud Kubernetes
      yaml """
      kind: Pod
      metadata:
        name: kaniko
      spec:
        containers:
        - name: awscli
          image: amazon/aws-cli
          imagePullPolicy: IfNotPresent
          command:
          -  cat
          tty: true
        - name: curl
          image: docker.io/gempesaw/curl-jq:latest
          imagePullPolicy: IfNotPresent
          command:
          -  cat
          tty: true
        - name: kaniko
          image: gcr.io/kaniko-project/executor:debug-539ddefcae3fd6b411a95982a830d987f4214251
          imagePullPolicy: IfNotPresent
          command:
          - cat
          tty: true
          volumeMounts:
            - name: docker-config
              mountPath: /kaniko/.docker
        volumes:
          - name: docker-config
            configMap:
              name: docker-config
      """
    }
  }
    stages{
	 
      stage('SVC_CONFIG_UPDATE') {
          steps {       
	       container(name: 'curl') {
		   checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/riq-jenkins-pipeline-jobs.git']]])
	       sh '''
	       cd $AUTOMATION_DIR
	       ls -l
	       cat token.json
	       token=$(curl --header 'Content-type: application/json' --request POST -d @./token1.json https://prod.api.releaseiq.io/cm/api/authenticate-client | cut -d '"' -f6)
	       echo $token
	       echo 'token="'"$token"'"' > $WORKSPACE/token.txt
	       cat $WORKSPACE/token.txt
		   '''
	        }
	        container(name: 'awscli'){
            		withAWS(region:'us-west-2',credentials:'aws') {
			sh '''
			mkdir demo1
			aws s3 cp s3://riq-staging/customer_onboarding/$FRIENDLY_NAME/resource.txt  $WORKSPACE/demo1/
			chmod -R 777 demo1/resource.txt
            		chown -R 1000:1000 demo1
            		ls -l $WORKSPACE/demo1/
			'''
			}
		}
		 container(name: 'curl') {
          sh '''
			. $WORKSPACE/demo1/resource.txt
			. $WORKSPACE/token.txt
			cd $AUTOMATION_DIR
			sed -i "s|39c2fa9a-1f12-423a-9528-c6bbf77a78c8|${TENANT_UUID}|" admin.json
			sed -i "s|venkata|${FIRSTNAME}|" admin.json
			sed -i "s|kadiyala|${LASTNAME}|" admin.json
			sed -i "s|subhani.s@releaseiq.io|${EMAIL}|" admin.json
			sed -i "s|us-west-2_J6Ww2Ebep|${COGNITO_POOL_ID}|" admin.json
			curl --header 'Content-type: application/json' -H "Authorization: Bearer ${token}" --request POST -d @./admin.json https://prod.api.releaseiq.io/cm/createenterpriseadmin
		  echo FRIENDLY_NAME="$FRIENDLY_NAME" > $WORKSPACE/var.properties
		  cd $WORKSPACE
                echo "{\\"FRIENDLY_NAME\\": \\"$FRIENDLY_NAME\\"}" > artifact.json
		ls -l artifact.json
		cat artifact.json
		  '''
		  archiveArtifacts 'artifact.json'
        }
		script {
		def props = readProperties file: 'var.properties'
		env.FRIENDLY_NAME = props.FRIENDLY_NAME
		
		buildName "$FRIENDLY_NAME"
		}
		}
	}
}
}	
